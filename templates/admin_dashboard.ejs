<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .fade-in {
            animation: fadeIn 0.5s ease-in-out;
        }
    </style>
</head>
<body class="bg-gray-900 text-white">
    <div class="container mx-auto p-6">
        <header class="flex justify-between items-center py-6 border-b border-gray-700">
            <h1 class="text-3xl font-bold">Admin Dashboard</h1>
            <button onclick="logout()" class="bg-red-600 px-4 py-2 rounded-lg hover:bg-red-700" style="border-top: 2%;">Logout</button>
        </header>
        
        <section class="mt-6">
            <h2 class="text-xl font-semibold mb-4">Users and Water Usage</h2>
            <div class="overflow-x-auto">
                <table class="w-full text-left border border-gray-700 rounded-lg fade-in">
                    <thead class="bg-gray-800 text-gray-300">
                        <tr>
                            <th class="p-3">Consumer Number</th>
                            <th class="p-3">API Key</th>
                            <th class="p-3">Latest Water Usage</th>
                            <th class="p-3">Water Limit</th>
                            <th class="p-3">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% users.forEach(function(user, index) { %>
                            <tr class="bg-gray-700 hover:bg-gray-600 transition transform hover:scale-105 fade-in">
                                <td class="p-3"><%= user.username %></td>
                                <td class="p-3"><%= user.api_key %></td>
                                <td class="p-3"><%= user.latest_usage %> L</td>
                                <td class="p-3" id="limit-<%= index %>"><%= user.water_limit %> L</td>
                                <td class="p-3">
                                    <button onclick="showUpdate(<%= index %>)" 
                                        class="bg-blue-500 px-4 py-2 rounded-md hover:bg-blue-600 transition transform hover:scale-110">
                                        Edit
                                    </button>
                                </td>
                            </tr>
                            <tr id="update-row-<%= index %>" class="hidden fade-in">
                                <td colspan="5" class="p-3 bg-gray-800">
                                    <input type="number" id="limit-input-<%= index %>" class="p-2 border rounded text-gray-900" value="<%= user.water_limit %>" />
                                    <button onclick="updateWaterLimit('<%= user.api_key %>', <%= index %>)" 
                                        class="bg-green-500 px-4 py-2 ml-2 rounded-md hover:bg-green-600 transition transform hover:scale-110">
                                        Update
                                    </button>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </section>
        
    </div>

    <script>
        function showUpdate(index) {
            document.querySelectorAll("[id^='update-row-']").forEach(row => row.classList.add('hidden'));
            document.getElementById("update-row-" + index).classList.remove("hidden");
        }

        function updateWaterLimit(apiKey, index) {
            const newLimit = document.getElementById("limit-input-" + index).value;
            fetch(`/set_water_limit?apikey=${apiKey}&water_limit=${newLimit}`, { method: "POST" })
                .then(response => response.json())
                .then(data => {
                    alert(data.message);
                    document.getElementById("limit-" + index).innerText = `${newLimit} L`;
                    document.getElementById("update-row-" + index).classList.add("hidden");
                })
                .catch(error => console.error("Error updating limit:", error));
        }
        function logout() {
        // Clear authentication data (adjust based on your authentication method)
            localStorage.removeItem("userToken");  // Remove JWT or token
            sessionStorage.clear();  // Clear session storage

            // Redirect to home page
            window.location.href = "/";

            // Completely remove the dashboard page from history
            setTimeout(() => {
                window.history.pushState(null, null, "/");
                window.history.replaceState(null, null, "/");

                window.onpopstate = function () {
                    window.history.go(1);
                };
            }, 0);
        }
        document.addEventListener("DOMContentLoaded", function () {
            const table = document.querySelector("table"); // Select your table
            const rows = table.querySelectorAll("tr"); // Get all rows

            rows.forEach(row => {
                const firstCell = row.querySelector("td"); // Check the first column (adjust index if needed)
                if (firstCell && firstCell.textContent.trim().toLowerCase() === "admin") {
                    row.remove(); // Remove the row
                }
            });
        });
    </script>
</body>
</html>
